% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/higherorder.R
\name{rx_debounce}
\alias{rx_debounce}
\title{Debounce a reactive expression}
\usage{
rx_debounce(rxexpr, millis, domain = shiny::getDefaultReactiveDomain())
}
\arguments{
\item{rxexpr}{A reactive expression that invalidates too often.}

\item{millis}{Number of milliseconds of inactivity to wait for before
allowing invalidation to succeed.}

\item{domain}{See \link[shiny]{domains}.}
}
\description{
Transforms a reactive expression by preventing its invalidation signals from
being sent until activity has stopped for the given number of milliseconds.
This lets you ignore a very "chatty" reactive expression until it becomes
idle, which is useful when the intermediate values don't matter as much as
the final value, and the downstream calculations that depend on the reactive
expression take a long time.
}
\details{
This is not a true debounce in that it will not prevent \code{expr} from
being called many times (in fact it may be called more times than usual), but
rather, the reactive invalidation signal that is produced by expr is
debounced instead. This means that \code{rx_debounce} should be used when
\code{expr} is cheap but the things it will trigger (outputs and reactives
that use \code{expr}) are expensive.
}

